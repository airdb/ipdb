syntax = "proto3";

package ipinfo.v1;

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/any.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "validate/validate.proto";

option go_package = "ipdb/gen/go/ipinfo/v1;ipinfov1";
option java_multiple_files = true;
option java_outer_classname = "IpdbClientIpProto";
option java_package = "com.airdb.apigw.v1";

service IpdbClientIpService {
  option (google.api.default_host) = "apigw.airdb.com";
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_tag) = {description: "IP Service - client ip info"};


  // IpdbClientIpService
  rpc IpdbClientIpService(IpdbClientIpRequest) returns (IpdbClientIpResponse) {
    option (google.api.http) = {
      post: "/v1/ip/clientip/{ip=*}"
      body: "payload"
      response_body: "data"
    };
    option (google.api.method_signature) = "ip";
  }
}

message IpdbClientIpRequest {
  string ip = 1 [
    (google.api.field_behavior) = REQUIRED,
    (validate.rules).string.min_len = 1
  ];
  map<string, google.protobuf.Any> payload = 2;

  string isp_domain = 3;
  string isp_name = 4;
  string ip_city = 5;
  int64 cnt = 6;
}

message IpdbClientIpResponse {
  google.protobuf.Any data = 4;
  string status = 1;
}
